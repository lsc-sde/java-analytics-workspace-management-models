/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.lsc.sde.analytics.workspace.management.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.lsc.sde.analytics.workspace.management.models.V1AnalyticsDataSourceBindingSpecApprovals;
import io.github.lsc.sde.analytics.workspace.management.models.V1AnalyticsDataSourceSpecConnections;
import io.github.lsc.sde.analytics.workspace.management.models.V1AnalyticsDataSourceSpecProject;
import io.github.lsc.sde.analytics.workspace.management.models.V1AnalyticsDataSourceSpecPublisher;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V1AnalyticsDataSourceSpec
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-03T09:52:21.861Z[Etc/UTC]")
public class V1AnalyticsDataSourceSpec {
  public static final String SERIALIZED_NAME_APPROVALS = "approvals";
  @SerializedName(SERIALIZED_NAME_APPROVALS)
  private List<V1AnalyticsDataSourceBindingSpecApprovals> approvals = null;

  public static final String SERIALIZED_NAME_CONNECTIONS = "connections";
  @SerializedName(SERIALIZED_NAME_CONNECTIONS)
  private List<V1AnalyticsDataSourceSpecConnections> connections = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_LICENSE = "license";
  @SerializedName(SERIALIZED_NAME_LICENSE)
  private String license;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private V1AnalyticsDataSourceSpecProject project;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private V1AnalyticsDataSourceSpecPublisher publisher;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;


  public V1AnalyticsDataSourceSpec approvals(List<V1AnalyticsDataSourceBindingSpecApprovals> approvals) {
    
    this.approvals = approvals;
    return this;
  }

  public V1AnalyticsDataSourceSpec addApprovalsItem(V1AnalyticsDataSourceBindingSpecApprovals approvalsItem) {
    if (this.approvals == null) {
      this.approvals = new ArrayList<>();
    }
    this.approvals.add(approvalsItem);
    return this;
  }

   /**
   * Get approvals
   * @return approvals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1AnalyticsDataSourceBindingSpecApprovals> getApprovals() {
    return approvals;
  }


  public void setApprovals(List<V1AnalyticsDataSourceBindingSpecApprovals> approvals) {
    this.approvals = approvals;
  }


  public V1AnalyticsDataSourceSpec connections(List<V1AnalyticsDataSourceSpecConnections> connections) {
    
    this.connections = connections;
    return this;
  }

  public V1AnalyticsDataSourceSpec addConnectionsItem(V1AnalyticsDataSourceSpecConnections connectionsItem) {
    if (this.connections == null) {
      this.connections = new ArrayList<>();
    }
    this.connections.add(connectionsItem);
    return this;
  }

   /**
   * Get connections
   * @return connections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1AnalyticsDataSourceSpecConnections> getConnections() {
    return connections;
  }


  public void setConnections(List<V1AnalyticsDataSourceSpecConnections> connections) {
    this.connections = connections;
  }


  public V1AnalyticsDataSourceSpec description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the data source
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description of the data source")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public V1AnalyticsDataSourceSpec displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Display name of the data source
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Display name of the data source")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public V1AnalyticsDataSourceSpec license(String license) {
    
    this.license = license;
    return this;
  }

   /**
   * A description of the license for this data dource
   * @return license
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description of the license for this data dource")

  public String getLicense() {
    return license;
  }


  public void setLicense(String license) {
    this.license = license;
  }


  public V1AnalyticsDataSourceSpec project(V1AnalyticsDataSourceSpecProject project) {
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1AnalyticsDataSourceSpecProject getProject() {
    return project;
  }


  public void setProject(V1AnalyticsDataSourceSpecProject project) {
    this.project = project;
  }


  public V1AnalyticsDataSourceSpec publisher(V1AnalyticsDataSourceSpecPublisher publisher) {
    
    this.publisher = publisher;
    return this;
  }

   /**
   * Get publisher
   * @return publisher
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1AnalyticsDataSourceSpecPublisher getPublisher() {
    return publisher;
  }


  public void setPublisher(V1AnalyticsDataSourceSpecPublisher publisher) {
    this.publisher = publisher;
  }


  public V1AnalyticsDataSourceSpec type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of data source
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of data source")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1AnalyticsDataSourceSpec v1AnalyticsDataSourceSpec = (V1AnalyticsDataSourceSpec) o;
    return Objects.equals(this.approvals, v1AnalyticsDataSourceSpec.approvals) &&
        Objects.equals(this.connections, v1AnalyticsDataSourceSpec.connections) &&
        Objects.equals(this.description, v1AnalyticsDataSourceSpec.description) &&
        Objects.equals(this.displayName, v1AnalyticsDataSourceSpec.displayName) &&
        Objects.equals(this.license, v1AnalyticsDataSourceSpec.license) &&
        Objects.equals(this.project, v1AnalyticsDataSourceSpec.project) &&
        Objects.equals(this.publisher, v1AnalyticsDataSourceSpec.publisher) &&
        Objects.equals(this.type, v1AnalyticsDataSourceSpec.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approvals, connections, description, displayName, license, project, publisher, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1AnalyticsDataSourceSpec {\n");
    sb.append("    approvals: ").append(toIndentedString(approvals)).append("\n");
    sb.append("    connections: ").append(toIndentedString(connections)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

