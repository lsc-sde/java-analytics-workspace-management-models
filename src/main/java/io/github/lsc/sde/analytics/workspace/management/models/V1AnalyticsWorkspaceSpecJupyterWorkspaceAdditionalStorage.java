/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.lsc.sde.analytics.workspace.management.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-31T10:04:15.917Z[Etc/UTC]")
public class V1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage {
  public static final String SERIALIZED_NAME_MOUNT_PATH = "mountPath";
  @SerializedName(SERIALIZED_NAME_MOUNT_PATH)
  private String mountPath;

  public static final String SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM = "persistentVolumeClaim";
  @SerializedName(SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM)
  private String persistentVolumeClaim;

  public static final String SERIALIZED_NAME_STORAGE_CLASS_NAME = "storageClassName";
  @SerializedName(SERIALIZED_NAME_STORAGE_CLASS_NAME)
  private String storageClassName;


  public V1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage mountPath(String mountPath) {
    
    this.mountPath = mountPath;
    return this;
  }

   /**
   * The directory to mount this storage in the claim
   * @return mountPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The directory to mount this storage in the claim")

  public String getMountPath() {
    return mountPath;
  }


  public void setMountPath(String mountPath) {
    this.mountPath = mountPath;
  }


  public V1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage persistentVolumeClaim(String persistentVolumeClaim) {
    
    this.persistentVolumeClaim = persistentVolumeClaim;
    return this;
  }

   /**
   * The name of the persistent volume claim to apply
   * @return persistentVolumeClaim
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the persistent volume claim to apply")

  public String getPersistentVolumeClaim() {
    return persistentVolumeClaim;
  }


  public void setPersistentVolumeClaim(String persistentVolumeClaim) {
    this.persistentVolumeClaim = persistentVolumeClaim;
  }


  public V1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage storageClassName(String storageClassName) {
    
    this.storageClassName = storageClassName;
    return this;
  }

   /**
   * The storage class name applied to the persistent volume claim (if it doesn&#39;t already exist).  This defaults to the jupyterhub default storage class 
   * @return storageClassName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The storage class name applied to the persistent volume claim (if it doesn't already exist).  This defaults to the jupyterhub default storage class ")

  public String getStorageClassName() {
    return storageClassName;
  }


  public void setStorageClassName(String storageClassName) {
    this.storageClassName = storageClassName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage v1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage = (V1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage) o;
    return Objects.equals(this.mountPath, v1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage.mountPath) &&
        Objects.equals(this.persistentVolumeClaim, v1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage.persistentVolumeClaim) &&
        Objects.equals(this.storageClassName, v1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage.storageClassName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mountPath, persistentVolumeClaim, storageClassName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1AnalyticsWorkspaceSpecJupyterWorkspaceAdditionalStorage {\n");
    sb.append("    mountPath: ").append(toIndentedString(mountPath)).append("\n");
    sb.append("    persistentVolumeClaim: ").append(toIndentedString(persistentVolumeClaim)).append("\n");
    sb.append("    storageClassName: ").append(toIndentedString(storageClassName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

